const lesson1 = {
	materia: 'MatemÃ¡tica',
	numeroEstudantes: 20,
	professor: 'Maria Clara',
	turno: 'manhÃ£',
};

const lesson2 = {
	materia: 'HistÃ³ria',
	numeroEstudantes: 20,
	professor: 'Carlos',
};

const lesson3 = {
	materia: 'MatemÃ¡tica',
	numeroEstudantes: 10,
	professor: 'Maria Clara',
	turno: 'noite',
};

// 1 - Crie uma funÃ§Ã£o para adicionar o turno da noite na lesson2. Essa funÃ§Ã£o deve possuir trÃªs parÃ¢metros, sendo eles: o objeto a ser modificado, a chave que deverÃ¡ ser adicionada e o valor dela.
const addTurno = (object, key, value) => (object[key] = value);
addTurno(lesson2, 'turno', 'noite');
console.log(lesson2);

// 2 - Crie uma funÃ§Ã£o para listar as keys de um objeto. Essa funÃ§Ã£o deve receber um objeto como parÃ¢metro.
const keyList = (object) => Object.keys(object);
console.log(keyList(lesson3));

// 3 - Crie uma funÃ§Ã£o para mostrar o tamanho de um objeto.
const size = (object) => Object.keys(object).length;
console.log(size(lesson1));

// 4 - Crie uma funÃ§Ã£o para listar os valores de um objeto. Essa funÃ§Ã£o deve receber um objeto como parÃ¢metro.
const valuesList = (object) => Object.values(object);
console.log(valuesList(lesson1));

// 5 - Crie um objeto de nome allLessons, que deve agrupar todas as aulas atravÃ©s do Object.assign. Cada chave desse novo objeto serÃ¡ uma aula, sendo essas chaves: lesson1, lesson2 e lesson3. Ao executar o comando console.log(allLessons), a saÃ­da deverÃ¡ ser a seguinte:
// console.log(allLessons);
/*
{
  lesson1:
   { materia: 'MatemÃ¡tica',
     numeroEstudantes: 20,
     professor: 'Maria Clara',
     turno: 'manhÃ£' },
  lesson2:
   { materia: 'HistÃ³ria',
     numeroEstudantes: 20,
     professor: 'Carlos',
     turno: 'noite' },
  lesson3:
   { materia: 'MatemÃ¡tica',
     numeroEstudantes: 10,
     professor: 'Maria Clara',
     turno: 'noite' }
};
*/
const allLessons = Object.assign({}, { lesson1, lesson2, lesson3 });
console.log(allLessons);

// 6 - Usando o objeto criado no exercÃ­cio 5, crie uma funÃ§Ã£o que retorne o nÃºmero total de estudantes em todas as aulas.
let total = 0;
Object.values(allLessons).forEach((value) => {
	total += value['numeroEstudantes'];
});
console.log(total);

// 7 - Crie uma funÃ§Ã£o que obtenha o valor da chave de acordo com a sua posiÃ§Ã£o no objeto. Por exemplo: console.log(getValueByNumber(lesson1, 0));
// Output: 'MatÃ©matica'
const getValueByNumber = (object, indice) => Object.values(object)[indice];
console.log(getValueByNumber(lesson2, 2));

// 8 - Crie uma funÃ§Ã£o que verifique se o par (chave / valor) existe na funÃ§Ã£o. Essa funÃ§Ã£o deve possuir trÃªs parÃ¢metros, sendo eles: o objeto, o nome da chave e o valor da chave. Exemplo:
// console.log(verifyPair(lesson3, 'turno', 'noite'));
// Output: true,
// console.log(verifyPair(lesson3, 'materia', 'Maria Clara'));
// Output: false
const verifyPair = (object, key, value) =>
	object[key] === value ? true : false;
console.log(verifyPair(lesson3, 'turno', 'noite'));

// BÃ´nus 1 - ðŸš€ Crie uma funÃ§Ã£o para contar quantos estudantes assistiram Ã s aulas de MatemÃ¡tica. Use o objeto criado no exercÃ­cio 5.
total = 0;
Object.values(allLessons).forEach((value) => {
	value['materia'] === 'MatemÃ¡tica'
		? (total += value['numeroEstudantes'])
		: (total += 0);
});
console.log(total);

// BÃ´nus 2 - ðŸš€ Crie uma funÃ§Ã£o que deverÃ¡ retornar um objeto que representa o relatÃ³rio do professor ou professora, as aulas que ele ou ela ministrou e o nÃºmero total de estudantes. Use o objeto criado no exercÃ­cio 5:
total = 0;
let materias = [];
function createReport(object, teacher) {
	Object.values(object).forEach((value) => {
		if (value['professor'] === teacher) {
			materias.push(value['materia']);
			total += value['numeroEstudantes'];
		}
	});
	return `professor: ${teacher},
  aulas : [ ${materias} ],
  estudantes: ${total}`;
}
console.log(createReport(allLessons, 'Maria Clara'));
